---
# Create directories for reference data and logs

- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ galaxy_user }}"
    group: "{{ galaxy_user }}"
  with_items:
    - '{{ galaxy_log_path }}'

#______________________________________
# Install dependencies

- name: '[EL] Install packages'
  yum:
    name: '{{ item }}'
    state: present
  with_items:
    - lsof
  when: ansible_os_family == "RedHat"

- name: '[Ubuntu] Install packages'
  apt:
    name: '{{ item }}'
    state: present
  with_items:
    - lsof
  when: ansible_os_family == "Debian"

#______________________________________
# Detect init system
# Supported: supervisord, init

- name: Check if Galaxy is managed by supervisor
  supervisorctl: name="galaxy:" state=present
  register: supervisor_galaxy
  ignore_errors: yes

- name: Set init-type to supervisord
  set_fact:
    init_type: 'supervisord'
  when: supervisor_galaxy.failed is undefined

- name: Check if Galaxy is managed by systemd/upstart
  service: name="galaxy" state=started
  register: systemd_galaxy
  ignore_errors: yes
  when: supervisor_galaxy.failed is defined

- name: Set init-type to systemd
  set_fact:
    init_type: 'init'
  when: supervisor_galaxy.failed is defined and systemd_galaxy.failed is undefined

#______________________________________
# Install galaxyctl scripts

- name: '[EL] Set supervisord conf path'
  set_fact:
    supervisord_conf_path: '/etc'
  when: ansible_os_family == "RedHat" and init_type == "supervisord"

- name: '[Ubuntu] Set supervisord conf path'
  set_fact:
    supervisord_conf_path: '/etc/supervisor'
  when: ansible_os_family == "Debian" and init_type == "supervisord"

- name: Check for galaxyctl script
  stat: path='{{ galaxy_custom_script_path }}/galaxyctl'
  register: galaxyctl_installed

- name: Copy Galaxy management script
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: '{{ item.mode }}'
  with_items:
    - { src: 'galaxyctl_libs.py.j2', dest: '{{ galaxy_custom_script_path }}/galaxyctl_libs.py', mode: 'a+x' }
    - { src: 'galaxyctl.py.j2', dest: '{{ galaxy_custom_script_path }}/galaxyctl', mode: 'a+x' }
  when: not galaxyctl_installed.stat.exists
